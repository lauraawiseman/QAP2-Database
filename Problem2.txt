Problem 2:

1. Creating Tables: 

Products Table:

CREATE TABLE products(
product_id SERIAL PRIMARY KEY,
product_name VARCHAR(50),
price DECIMAL, 
stock_quantity INTEGER
);

SELECT * from products

Customers Table: 

CREATE TABLE customers(
customer_id SERIAL PRIMARY KEY,
first_name VARCHAR(50),
last_name VARCHAR(50),
email VARCHAR(50)
);

SELECT * from customers

Orders Table:

CREATE TABLE orders(
order_id SERIAL PRIMARY KEY,
customer_id INTEGER,
FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
order_date DATE
);

SELECT * from orders

Order Items Table:

CREATE TABLE order_items(
order_id INTEGER,
FOREIGN KEY (order_id) REFERENCES orders(order_id),
product_id INTEGER,
FOREIGN KEY (product_id) REFERENCES products(product_id),
quantity INTEGER,
PRIMARY KEY(order_id, product_id)
);

SELECT * from order_items


2. Insert Data:

Products:

INSERT INTO products(product_name,price, stock_quantity)
VALUES 
	('Apple','5.50','10'),
	('Banana','6.00','8'),
	('Pear','3.00','6'),
	('Orange','2.00','10'),
	('Lemon','4.00','7');
	

SELECT * from products

Customers:

INSERT INTO customers(first_name, last_name, email)
VALUES
	('Sarah', 'Walker', 'sarah.walker@example.com'),
	('Chuck', 'Bartowski', 'chuck.bartowski@example.com'),
	('Morgan', 'Grimes', 'morgan.grimes@example.com'),
	('John', 'Casey', 'john.casey@example.com');

SELECT * from customers

Orders:

INSERT INTO orders(customer_id, order_date)
VALUES 
	((SELECT customer_id FROM customers WHERE first_name='Sarah' AND last_name='Walker'), '2025-02-10'),
	((SELECT customer_id FROM customers WHERE first_name='Chuck' AND last_name='Bartowski'), '2025-01-05'),
	((SELECT customer_id FROM customers WHERE first_name='Morgan' AND last_name='Grimes'), '2025-01-30'),
	((SELECT customer_id FROM customers WHERE first_name='John' AND last_name='Casey'), '2025-02-15'),
	((SELECT customer_id FROM customers WHERE first_name='Sarah' AND last_name='Walker'), '2025-02-26');

SELECT * FROM orders

Order Items:

INSERT INTO order_items(order_id, product_id, quantity)
VALUES
	(1, 1, 1),
	(1, 2, 1),
	(2, 2, 1),
	(2, 3, 1),
	(3, 4, 1),
	(3, 5, 1),
	(4, 1, 1),
	(4, 3, 1),
	(5, 5, 1),
    (5, 4, 1);

Tasks:

1. Write SQL Queries:

- Retrieve the names and stock quantities of all products.

SELECT 
products.product_name,
products.stock_quantity
FROM products

- Retrieve the product names and quantities for one of the orders placed.

SELECT 
products.product_name,
order_items.quantity
FROM products
JOIN order_items ON order_items.product_id = products.product_id
WHERE order_items.order_id= 1;

- Retrieve all orders placed by a specific customer (including the IDâ€™s of what was ordered and the quantities).

SELECT 
orders.order_id,
order_items.product_id,
order_items.quantity
FROM orders
JOIN order_items ON orders.order_id = order_items.order_id
WHERE orders.customer_id=1;


2. Update Data:

UPDATE products
SET stock_quantity = stock_quantity - (
	SELECT quantity
	FROM order_items
	WHERE product_id = 1 AND order_id = 1
)
WHERE product_id=1;

- Updated the stock order 1, one Apple was ordered, this updated stock_quantity to 9.  


3. Delete Data:

DELETE FROM order_items
WHERE order_id = 1;

DELETE FROM orders 
WHERE order_id = 1;
